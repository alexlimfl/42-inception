# events {}

# http {

# 	include /etc/nginx/mime.types;
#     # HTTPS server block
#     server {
#         listen 443 ssl;

#         ssl_protocols TLSv1.3;      # Only use TLS version 1.3
#         ssl_certificate /etc/nginx/ssl/inception.crt;
#         ssl_certificate_key /etc/nginx/ssl/inception.key;

#         root /var/www/wordpress;    # Set the root directory for the website
#         index index.php index.html;

#         server_name $DOMAIN_NAME;

#         location ~ \.php$ {
#             include snippets/fastcgi-php.conf;  # Include FastCGI configuration for PHP
#             fastcgi_pass wordpress:9000;        # Forward PHP requests to the WordPress container
#             fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
#             include fastcgi_params;
#         }
#     }
# }

events {}

http {
    include /etc/nginx/mime.types;

    # HTTPS server block
    server {
        listen 443 ssl;

        ssl_protocols TLSv1.3;      # Only use TLS version 1.3
        ssl_certificate /etc/nginx/ssl/inception.crt;
        ssl_certificate_key /etc/nginx/ssl/inception.key;

        root /var/www/wordpress;    # Set the root directory for the website
        index index.php index.html; # Default files to serve

        server_name $DOMAIN_NAME;   # Ensure this variable is set correctly

        # Location block for PHP files
        location ~ \.php$ {
            include snippets/fastcgi-php.conf;  # Include FastCGI configuration for PHP
            fastcgi_pass wordpress:9000;        # Forward PHP requests to the WordPress container
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            include fastcgi_params;
        }

        # Add a location block to handle static files and directories
        location / {
            try_files $uri $uri/ =404;   # Serve files or directories, or return 404 if not found
        }
    }
}
